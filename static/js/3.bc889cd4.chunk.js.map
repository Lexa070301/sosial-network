{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","classes","info_wrap","avatar","src","photos","small","alt","info","name","fullName","description","aboutMe","Preloader","Post","item","content","likes","maxLength","maxLengthCreator","AddPost","reduxForm","form","action","onSubmit","handleSubmit","new_post","Field","textarea","id","placeholder","component","Textarea","validate","requiredField","btn","Posts","React","memo","console","log","PostsDataElements","ProfilePage","PostsData","map","post","text","likesCount","posts","postsTitle","formData","addPost","PostsContainer","connect","state","Profile","ProfileAPIContainer","userId","this","match","params","MyUserId","getProfileInfo","getStatus","Component","compose","Auth","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/3.bc889cd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__1lpBU\",\"info_wrap\":\"ProfileInfo_info_wrap__2MnyU\",\"info\":\"ProfileInfo_info__3dsdE\",\"name\":\"ProfileInfo_name__1VvQB\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"description\":\"ProfileInfo_description__2yWda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__tkALa\",\"new_post\":\"Posts_new_post__1hMFN\",\"postsTitle\":\"Posts_postsTitle__2z41B\",\"textarea\":\"Posts_textarea__2gBif\",\"btn\":\"Posts_btn__1t-Gf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2EmvQ\",\"avatar\":\"Post_avatar__3qkL-\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        {!editMode ?\r\n            <div>\r\n              <span onDoubleClick={activateEditMode}>{status || \"------\"}</span>\r\n            </div> :\r\n            <div>\r\n              <input onChange={onStatusChange}\r\n                     autoFocus={true}\r\n                     onBlur={deactivateEditMode}\r\n                     value={status}/>\r\n            </div>\r\n        }\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport avatar from \"../../../assets/images/default-avatar.jpg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  } else {\r\n    return (\r\n        <div>\r\n          {/*<img className={classes.img}*/}\r\n          {/*     src=\"https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg\"*/}\r\n          {/*     alt=\"Img\"/>*/}\r\n          <div className={classes.info_wrap}>\r\n            <img className={classes.avatar}\r\n                 src={profile.photos.small ? profile.photos.small : avatar}\r\n                 alt=\"Img\"/>\r\n            <div className={classes.info}>\r\n              <span className={classes.name}>\r\n                {profile.fullName}\r\n              </span>\r\n              <p className={classes.description}>\r\n                {profile.aboutMe}\r\n              </p>\r\n              <ProfileStatusWithHooks status={status}\r\n                                      updateStatus={updateStatus}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n      <div className={classes.item}>\r\n        <img alt={\"Avatar\"} className={classes.avatar} src='https://avataaars.io/?avatarStyle=Circle&topType=LongHairStraight&accessoriesType=Blank&hairColor=BrownDark&facialHairType=Blank&clotheType=BlazerShirt&eyeType=Default&eyebrowType=Default&mouthType=Default&skinColor=Light'/>\r\n        <p>\r\n          {props.content}\r\n        </p>\r\n        <span>Likes: {props.likes}</span>\r\n      </div>\r\n  );\r\n}\r\nexport default Post;\r\n","import React from \"react\";\r\nimport classes from \"./Posts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength =  maxLengthCreator(30);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n      <form action=\"\" onSubmit={props.handleSubmit} className={classes.new_post}>\r\n        <Field\r\n            className={classes.textarea}\r\n            name=\"new_post\"\r\n            id=\"new-post\"\r\n            placeholder=\"Новый пост\"\r\n            component={Textarea}\r\n            validate={[requiredField, maxLength]}/>\r\n        <button className={\"btn \" + classes.btn}>\r\n          Add Post\r\n        </button>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst AddPost = reduxForm({\r\n  form: \"AddPost\",\r\n})(AddPostForm)\r\n\r\nconst Posts = React.memo(props => {\r\n  console.log(\"render\")\r\n  let PostsDataElements = props.ProfilePage.PostsData.map(post =>\r\n      <Post key={post.id}\r\n            content={post.text}\r\n            likes={post.likesCount}/>\r\n  );\r\n\r\n  const onSubmit = (formData) => {\r\n    props.addPost(formData.new_post)\r\n  }\r\n\r\n  return (\r\n      <div className={classes.posts}>\r\n        <h2 className={classes.postsTitle}>My posts</h2>\r\n        <AddPost onSubmit={onSubmit}/>\r\n        {PostsDataElements}\r\n      </div>\r\n  );\r\n});\r\nexport default Posts;\r\n","import {connect} from \"react-redux\";\r\nimport {addPost} from \"../../../redux/profileReducer\";\r\nimport Posts from \"./Posts\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    ProfilePage: state.ProfilePage,\r\n  }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps,\r\n    {\r\n      addPost\r\n    })(Posts);\r\n\r\nexport default PostsContainer;\r\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\n\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n  return (\r\n      <div>\r\n        <ProfileInfo profile={profile}\r\n                     status={status}\r\n                     updateStatus={updateStatus}/>\r\n        <PostsContainer/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileInfo, getStatus, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport class ProfileAPIContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.MyUserId;\r\n    }\r\n    this.props.getProfileInfo(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Profile {...this.props}\r\n                 profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.ProfilePage.profile,\r\n    status: state.ProfilePage.status,\r\n    MyUserId: state.Auth.userId,\r\n    isAuth: state.Auth.isAuth\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n          getProfileInfo,\r\n          getStatus,\r\n          updateStatus\r\n        }\r\n    ),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileAPIContainer);\r\n"],"sourceRoot":""}